version: '3.8'

services:
  db:
    image: postgres:13
    container_name: db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

  web:
    build: .
    container_name: web
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      FLASK_APP: ${FLASK_APP}
      FLASK_RUN_HOST: ${FLASK_RUN_HOST}
      FLASK_RUN_PORT: ${FLASK_RUN_PORT}
    volumes:
      - type: tmpfs
        target: /project/migrations
    networks:
      - app-net
    depends_on:
      db:
        condition: service_healthy
    expose:
      - 5000

  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - web
    networks:
      - app-net

volumes:
  postgres_data:

networks:
  app-net: